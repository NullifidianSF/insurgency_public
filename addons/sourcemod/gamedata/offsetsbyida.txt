in  Win Function
   0    0 CINSPlayer::~CINSPlayer()
   1    0 CINSPlayer::~CINSPlayer()
//bellow this line subtract 1 from the win numbers
   2    2 CBaseEntity::SetRefEHandle(CBaseHandle const&)
   3    3 CBaseEntity::GetRefEHandle(void)const
   4    4 CBaseEntity::GetCollideable(void)
   5    5 CBaseEntity::GetNetworkable(void)
   6    6 CBaseEntity::GetBaseEntity(void)
   7    7 CBaseEntity::GetModelIndex(void)const
   8    8 CBaseEntity::GetModelName(void)const
   9    9 CBaseEntity::SetModelIndex(int)
  10   10 CINSPlayer::GetServerClass(void)
  11   11 CINSPlayer::YouForgotToImplementOrDeclareServerClass(void)
  12   12 CINSPlayer::GetDataDescMap(void)
  13   13 CBaseEntity::GetAIAddOn(void)const
  14   14 CBaseAnimating::TestCollision(Ray_t const&,unsigned int,CGameTrace &)
  15   15 CINSPlayer::TestHitboxes(Ray_t const&,unsigned int,CGameTrace &)
  16   16 CBaseEntity::ComputeWorldSpaceSurroundingBox(Vector *,Vector *)
  17   17 CINSPlayer::ShouldCollide(int,int)const
  18   18 CBaseEntity::SetOwnerEntity(CBaseEntity*)
  19   19 CBasePlayer::ShouldTransmit(CCheckTransmitInfo const*)
  20   20 CBasePlayer::UpdateTransmitState(void)
  21   21 CBaseCombatCharacter::SetTransmit(CCheckTransmitInfo *,bool)
  22   22 CBasePlayer::GetTracerType(void)
  23   23 CINSPlayer::Spawn(void)
  24   24 CINSPlayer::Precache(void)
  25   25 CBasePlayer::SetModel(char const*)
  26   26 CBaseAnimating::OnNewModel(void)
  27   27 CBaseEntity::InitSharedVars(void)
  28   28 CBaseMultiplayerPlayer::PostConstructor(char const*)
  29   29 CBaseEntity::PostClientActive(void)
  30   30 CBaseEntity::OnParseMapDataFinished(void)
  31   34 CBaseEntity::KeyValue(char const*,char const*)
  32   33 CBaseEntity::KeyValue(char const*,float)
  33   32 CBaseEntity::KeyValue(char const*,int)
  34   31 CBaseEntity::KeyValue(char const*,Vector const&)
  35   35 CBaseEntity::GetKeyValue(char const*,char *,int)
  36   36 CBasePlayer::Activate(void)
  37   37 CBaseEntity::SetParent(CBaseEntity*,int)
  38   38 CBaseEntity::GetUsePriority(CBaseEntity*)
  39   39 CBaseEntity::GetUseType(CBaseEntity*)
  40   40 CINSPlayer::ObjectCaps(void)
  41   41 CBaseEntity::AcceptInput(char const*,CBaseEntity*,CBaseEntity*,variant_t,int)
  42   42 CBasePlayer::GetPlayerName(void)const
  43   43 CBasePlayer::DrawDebugGeometryOverlays(void)
  44   44 CBaseAnimating::DrawDebugTextOverlays(void)
  45   45 CBasePlayer::Save(ISave &)
  46   46 CBasePlayer::Restore(IRestore &)
  47   47 CBasePlayer::ShouldSavePhysics(void)
  48   48 CBaseEntity::OnSave(IEntitySaveUtils *)
  49   49 CBasePlayer::OnRestore(void)
  50   50 CBasePlayer::RequiredEdictIndex(void)
  51   51 CBaseEntity::MoveDone(void)
  52   52 CBaseEntity::Think(void)
  53   54 CBasePlayer::NetworkStateChanged_m_nNextThinkTick(void)
  54   53 CBasePlayer::NetworkStateChanged_m_nNextThinkTick(void *)
  55   55 CBaseAnimating::GetBaseAnimating(void)
  56   56 CBaseAnimatingOverlay::GetBaseAnimatingOverlay(void)
  57   57 CAI_ExpresserHost<CBasePlayer>::GetResponseSystem(void)
  58   58 CAI_ExpresserHost<CBasePlayer>::DispatchResponse(char const*)
  59   59 CBasePlayer::Classify(void)
  60   60 CBaseEntity::DeathNotice(CBaseEntity*)
  61   61 CBaseEntity::ShouldAttractAutoAim(CBaseEntity*)
  62   62 CBaseEntity::GetAutoAimRadius(void)
  63   63 CBaseEntity::GetAutoAimCenter(void)
  64   64 CBaseEntity::GetBeamTraceFilter(void)
  65   65 CBaseEntity::PassesDamageFilter(CTakeDamageInfo const&)
  66   66 CINSPlayer::TraceAttack(CTakeDamageInfo const&,Vector const&,CGameTrace *)
  67   67 CBaseEntity::CanBeHitByMeleeAttack(CBaseEntity*)
  68   68 CINSPlayer::OnTakeDamage(CTakeDamageInfo const&)
  69   69 CBasePlayer::TakeHealth(float,int)
  70   70 CBaseEntity::IsAlive(void)const
  71   71 CINSPlayer::Event_Killed(CTakeDamageInfo const&)
  72   72 CBasePlayer::Event_KilledOther(CBaseEntity *,CTakeDamageInfo const&)
  73   73 CBaseCombatCharacter::BloodColor(void)
  74   74 CBaseEntity::IsTriggered(CBaseEntity*)
  75   75 CBaseEntity::IsNPC(void)const
  76   76 CBaseEntity::MyNPCPointer(void)
  77   77 CBaseCombatCharacter::MyCombatCharacterPointer(void)
  78   78 CBaseEntity::MyNextBotPointer(void)
  79   79 CBaseEntity::GetDelay(void)
  80   80 CBaseEntity::IsMoving(void)
  81   81 CBaseEntity::DamageDecal(int,int)
  82   82 CBaseEntity::DecalTrace(CGameTrace *,char const*)
  83   83 CBaseEntity::ImpactTrace(CGameTrace *,int,char *)
  84   84 CBaseEntity::OnControls(CBaseEntity*)
  85   85 CBaseEntity::HasTarget(string_t)
  86   86 CBasePlayer::IsPlayer(void)const
  87   87 CBaseEntity::IsGrenade(void)const
  88   88 CBasePlayer::IsNetClient(void)const
  89   89 CBaseEntity::IsTemplate(void)
  90   90 CBaseEntity::IsBaseObject(void)const
  91   91 CBaseEntity::IsBaseTrain(void)const
  92   92 CBaseEntity::IsWeapon(void)const
  93   93 CBaseEntity::IsGear(void)const
  94   94 CBaseEntity::IsBaseCombatWeapon(void)const
  95   95 CBaseEntity::MyCombatWeaponPointer(void)
  96   96 CBaseEntity::GetServerVehicle(void)
  97   97 CBaseEntity::IsViewable(void)
  98   98 CINSPlayer::ChangeTeam(int)
  99   99 CBaseEntity::OnEntityEvent(EntityEvent_t,void *)
 100  101 CBaseEntity::CanStandOn(CBaseEntity*)const
 101  100 CBaseEntity::CanStandOn(edict_t *)const
 102  103 CBaseEntity::GetEnemy(void)
 103  102 CBaseEntity::GetEnemy(void)const
 104  104 CINSPlayer::Use(CBaseEntity *,CBaseEntity *,USE_TYPE,float)
 105  105 CBaseEntity::StartTouch(CBaseEntity*)
 106  106 CBasePlayer::Touch(CBaseEntity *)
 107  107 CBaseEntity::EndTouch(CBaseEntity*)
 108  108 CBaseEntity::StartBlocked(CBaseEntity*)
 109  109 CBaseEntity::Blocked(CBaseEntity*)
 110  110 CBaseEntity::EndBlocked(void)
 111  111 CINSPlayer::PhysicsSimulate(void)
 112  112 CBaseEntity::PhysicsLandedOnGround(float)
 113  113 CINSPlayer::UpdateOnRemove(void)
 114  114 CBaseEntity::StopLoopingSounds(void)
 115  115 CBaseEntity::SUB_AllowedToFade(void)
 116  116 CBaseFlex::Teleport(Vector const*,QAngle const*,Vector const*,bool)
 117  117 CBaseEntity::NotifySystemEvent(CBaseEntity*,notify_system_event_t,notify_system_event_params_t const&)
 118  118 CINSPlayer::MakeTracer(Vector const&,CGameTrace const&,int)
 119  119 CBaseEntity::GetTracerAttachment(void)
 120  120 CBaseEntity::FireBullets(FireBulletsInfo_t const&)
 121  121 CBasePlayer::DoImpactEffect(CGameTrace &,int)
 122  122 CBaseEntity::Respawn(void)
 123  123 CBaseEntity::IsLockedByMaster(void)
 124  124 CBaseEntity::GetMaxHealth(void)const
 125  125 CINSPlayer::SetHealth(int)
 126  126 CBaseMultiplayerPlayer::ModifyOrAppendCriteria(ResponseRules::CriteriaSet &)
 127  127 CBaseEntity::ModifyOrAppendDerivedCriteria(ResponseRules::CriteriaSet &)
 128  128 CBaseEntity::GetDamageType(void)const
 129  129 CBaseEntity::GetDamage(void)
 130  130 CBaseEntity::SetDamage(float)
 131  131 CINSPlayer::EyePosition(void)
 132  132 CBasePlayer::EyeAngles(void)
 133  133 CBasePlayer::LocalEyeAngles(void)
 134  134 CBaseEntity::EarPosition(void)
 135  135 CINSPlayer::BodyTarget(Vector const&,bool)
 136  136 CBaseEntity::HeadTarget(Vector const&)
 137  137 CBaseEntity::GetVectors(Vector *,Vector *,Vector *)const
 138  138 CBaseEntity::GetViewOffset(void)const
 139  139 CBaseEntity::SetViewOffset(Vector const&)
 140  140 CBasePlayer::GetSmoothedVelocity(void)
 141  141 CBaseAnimating::GetVelocity(Vector *,Vector *)
 142  142 CINSPlayer::GetFriction(void)const
 143  144 CBaseCombatCharacter::FVisible(CBaseEntity *,int,CBaseEntity **)
 144  143 CBaseCombatCharacter::FVisible(Vector const&,int,CBaseEntity **)
 145  145 CBaseEntity::CanBeSeenBy(CAI_BaseNPC *)
 146  146 CBaseEntity::GetAttackDamageScale(CBaseEntity*)
 147  147 CBaseEntity::GetReceivedDamageScale(CBaseEntity*)
 148  148 CBaseEntity::OnGroundChanged(CBaseEntity*,CBaseEntity*)
 149  149 CBaseEntity::GetGroundVelocityToApply(Vector &)
 150  150 CBaseEntity::PhysicsSplash(Vector const&,Vector const&,float,float)
 151  151 CBaseEntity::Splash(void)
 152  152 CBaseEntity::WorldSpaceCenter(void)const
 153  153 CBaseEntity::GetSoundEmissionOrigin(void)const
 154  154 CBaseEntity::CreateVPhysics(void)
 155  155 CBaseEntity::ForceVPhysicsCollide(CBaseEntity*)
 156  156 CBasePlayer::VPhysicsDestroyObject(void)
 157  157 CBasePlayer::VPhysicsUpdate(IPhysicsObject *)
 158  158 CBaseEntity::VPhysicsTakeDamage(CTakeDamageInfo const&)
 159  159 CBaseCombatCharacter::VPhysicsShadowCollision(int,gamevcollisionevent_t *)
 160  160 CBasePlayer::VPhysicsShadowUpdate(IPhysicsObject *)
 161  161 CBasePlayer::VPhysicsCollision(int,gamevcollisionevent_t *)
 162  162 CBaseEntity::VPhysicsFriction(IPhysicsObject *,float,int,int)
 163  163 CBaseEntity::UpdatePhysicsShadowToCurrentPosition(float)
 164  164 CBaseEntity::VPhysicsGetObjectList(IPhysicsObject **,int)
 165  165 CBaseEntity::VPhysicsIsFlesh(void)
 166  166 CBaseEntity::CanPushEntity(CBaseEntity*)const
 167  167 CBaseEntity::HasPhysicsAttacker(float)
 168  168 CBasePlayer::PhysicsSolidMaskForEntity(void)const
 169  169 CBaseEntity::ResolveFlyCollisionCustom(CGameTrace &,Vector &)
 170  170 CBaseEntity::PerformCustomPhysics(Vector *,Vector *,QAngle *,QAngle *)
 171  171 CBaseAnimating::GetStepOrigin(void)const
 172  172 CBaseAnimating::GetStepAngles(void)const
 173  173 CBaseEntity::ShouldDrawWaterImpacts(void)
 174  175 CBasePlayer::NetworkStateChanged_m_fFlags(void)
 175  174 CBasePlayer::NetworkStateChanged_m_fFlags(void *)
 176  177 CBasePlayer::NetworkStateChanged_m_nWaterLevel(void)
 177  176 CBasePlayer::NetworkStateChanged_m_nWaterLevel(void *)
 178  179 CBasePlayer::NetworkStateChanged_m_hGroundEntity(void)
 179  178 CBasePlayer::NetworkStateChanged_m_hGroundEntity(void *)
 180  181 CBasePlayer::NetworkStateChanged_m_vecBaseVelocity(void)
 181  180 CBasePlayer::NetworkStateChanged_m_vecBaseVelocity(void *)
 182  183 CBasePlayer::NetworkStateChanged_m_flFriction(void)
 183  182 CBasePlayer::NetworkStateChanged_m_flFriction(void *)
 184  185 CBasePlayer::NetworkStateChanged_m_vecVelocity(void)
 185  184 CBasePlayer::NetworkStateChanged_m_vecVelocity(void *)
 186  187 CBaseEntity::NetworkStateChanged_m_iMaxHealth(void)
 187  186 CBaseEntity::NetworkStateChanged_m_iMaxHealth(void *)
 188  189 CBasePlayer::NetworkStateChanged_m_iHealth(void)
 189  188 CBasePlayer::NetworkStateChanged_m_iHealth(void *)
 190  191 CBaseAnimating::NetworkStateChanged_m_bClientSideRagdoll(void)
 191  190 CBaseAnimating::NetworkStateChanged_m_bClientSideRagdoll(void *)
 192  193 CBasePlayer::NetworkStateChanged_m_lifeState(void)
 193  192 CBasePlayer::NetworkStateChanged_m_lifeState(void *)
 194  195 CBaseEntity::NetworkStateChanged_m_takedamage(void)
 195  194 CBaseEntity::NetworkStateChanged_m_takedamage(void *)
 196  197 CBasePlayer::NetworkStateChanged_m_vecViewOffset(void)
 197  196 CBasePlayer::NetworkStateChanged_m_vecViewOffset(void *)
 198  198 CBaseAnimating::GetIdealSpeed(void)const
 199  199 CBaseAnimating::GetIdealAccel(void)const
 200  200 CBaseAnimatingOverlay::StudioFrameAdvance(void)
 201  201 CBaseAnimating::ReachedEndOfSequence(void)
 202  202 CBaseAnimating::OnSequenceSet(int)
 203  203 CBaseAnimating::IsActivityFinished(void)
 204  204 CBaseAnimating::GetSequenceGroundSpeed(CStudioHdr *,int)
 205  205 CBaseAnimating::ClampRagdollForce(Vector const&,Vector*)
 206  206 CINSPlayer::BecomeRagdollOnClient(Vector const&)
 207  207 CBaseAnimating::IsRagdoll(void)
 208  208 CINSPlayer::CanBecomeRagdoll(void)
 209  209 CBaseAnimatingOverlay::GetSkeleton(CStudioHdr *,Vector *,QuaternionAligned *,int)
 210  210 CBaseAnimating::GetBoneTransform(int,matrix3x4_t &)
 211  211 CINSPlayer::SetupBones(matrix3x4a_t *,int)
 212  212 CBaseAnimating::CalculateIKLocks(float)
 213  213 CBaseAnimatingOverlay::DispatchAnimEvents(CBaseAnimating *)
 214  214 CINSPlayer::HandleAnimEvent(animevent_t *)
 215  215 CBaseAnimating::HandleScriptedAnimEvent(animevent_t *)
 216  216 CBaseAnimating::HandleBehaviorAnimEvent(animevent_t *)
 217  217 CBaseAnimating::PopulatePoseParameters(void)
 218  218 CBaseAnimating::GetAttachment(int,matrix3x4_t &)
 219  219 CBaseAnimating::InitBoneControllers(void)
 220  220 CBaseAnimating::GetGroundSpeedVelocity(void)
 221  221 CBaseAnimating::InvalidateBoneCache(void)
 222  222 CBaseAnimating::IsViewModel(void)const
 223  223 CBaseAnimating::RefreshCollisionBounds(void)
 224  224 CBaseAnimating::Ignite(float,bool,float,bool)
 225  225 CBaseAnimating::IgniteLifetime(float)
 226  226 CBaseAnimating::IgniteUseCheapEffect(bool)
 227  227 CBaseAnimating::Extinguish(void)
 228  228 CBaseAnimating::IsFrozen(void)
 229  229 CBaseAnimating::Freeze(float,CBaseEntity *,Ray_t *)
 230  230 CBaseAnimating::Unfreeze(void)
 231  231 CBaseAnimating::Dissolve(char const*,float,bool,int,Vector,int)
 232  232 CBaseCombatCharacter::SetLightingOriginRelative(CBaseEntity *)
 233  233 CBaseAnimating::SetLightingOrigin(CBaseEntity *)
 234  234 CBaseFlex::SetViewtarget(Vector const&)
 235  235 CBaseFlex::StartSceneEvent(CSceneEventInfo *,CChoreoScene *,CChoreoEvent *,CChoreoActor *,CBaseEntity *)
 236  236 CBaseFlex::ProcessSceneEvents(void)
 237  237 CINSPlayer::ProcessSceneEvent(CSceneEventInfo *,CChoreoScene *,CChoreoEvent *)
 238  238 CBaseFlex::ClearSceneEvent(CSceneEventInfo *,bool,bool)
 239  239 CBaseFlex::CheckSceneEventCompletion(CSceneEventInfo *,float,CChoreoScene *,CChoreoEvent *)
 240  240 CINSPlayer::PlayScene(char const*,float,ResponseRules::CRR_Response *,IRecipientFilter *)
 241  241 CBaseFlex::ScriptPlayScene(char const*,float)
 242  242 CBaseFlex::PlayAutoGeneratedSoundScene(char const*)
 243  243 CBaseFlex::ScriptGetOldestScene(void)
 244  244 CBaseFlex::ScriptGetSceneByIndex(int)
 245  245 CINSPlayer::OnResponseRuleSpoken(char const*,char const*,CSoundParameters const*,IRecipientFilter *)
 246  246 CBasePlayer::GetPhysicsImpactDamageTable(void)
 247  248 CBaseCombatCharacter::FInViewCone(CBaseEntity *)
 248  247 CBaseCombatCharacter::FInViewCone(Vector const&)
 249  250 CBaseCombatCharacter::FInAimCone(CBaseEntity *)
 250  249 CBaseCombatCharacter::FInAimCone(Vector const&)
 251  251 CBaseCombatCharacter::ShouldShootMissTarget(CBaseCombatCharacter*)
 252  252 CBaseCombatCharacter::FindMissTarget(void)
 253  253 CBaseCombatCharacter::HandleInteraction(int,void *,CBaseCombatCharacter*)
 254  254 CBasePlayer::BodyAngles(void)
 255  255 CBaseCombatCharacter::BodyDirection2D(void)
 256  256 CBaseCombatCharacter::BodyDirection3D(void)
 257  257 CBaseCombatCharacter::HeadDirection2D(void)
 258  258 CBaseCombatCharacter::HeadDirection3D(void)
 259  259 CBaseCombatCharacter::EyeDirection2D(void)
 260  260 CBaseCombatCharacter::EyeDirection3D(void)
 261  263 CBaseCombatCharacter::IsHiddenByFog(Vector const&)const
 262  262 CBaseCombatCharacter::IsHiddenByFog(CBaseEntity *)const
 263  261 CBaseCombatCharacter::IsHiddenByFog(float)const
 264  266 CBaseCombatCharacter::GetFogObscuredRatio(Vector const&)const
 265  265 CBaseCombatCharacter::GetFogObscuredRatio(CBaseEntity *)const
 266  264 CBaseCombatCharacter::GetFogObscuredRatio(float)const
 267  267 CBaseCombatCharacter::GetFogParams(fogparams_t *)const
 268  269 CBaseCombatCharacter::IsLookingTowards(CBaseEntity const*,float)const
 269  268 CBaseCombatCharacter::IsLookingTowards(Vector const&,float)const
 270  271 CBaseCombatCharacter::IsInFieldOfView(CBaseEntity *)const
 271  270 CBaseCombatCharacter::IsInFieldOfView(Vector const&)const
 272  273 CINSPlayer::IsLineOfSightClear(CBaseEntity *,CBaseCombatCharacter::LineOfSightCheckType)const
 273  272 CINSPlayer::IsLineOfSightClear(Vector const&,CBaseCombatCharacter::LineOfSightCheckType,CBaseEntity *)const
 274  274 CBaseCombatCharacter::OnFootstep(Vector const&,bool,bool,bool,bool)
 275  275 CINSPlayer::GiveAmmo(int,int,bool)
 276  276 CBaseCombatCharacter::NPC_TranslateActivity(Activity)
 277  277 CBaseCombatCharacter::Weapon_TranslateActivity(Activity,bool *)
 278  278 CBaseCombatCharacter::Weapon_FrameUpdate(void)
 279  279 CBaseCombatCharacter::Weapon_HandleAnimEvent(animevent_t *)
 280  280 CINSPlayer::Weapon_OwnsThisType(char const*,int)const
 281  281 CINSPlayer::Weapon_CanUse(CBaseCombatWeapon *)
 282  282 CINSPlayer::Weapon_Equip(CBaseCombatWeapon *)
 283  283 CINSPlayer::Weapon_EquipAmmoOnly(CBaseCombatWeapon *)
 284  284 CBasePlayer::Weapon_Drop(CBaseCombatWeapon *,Vector const*,Vector const*)
 285  285 CINSPlayer::Weapon_Switch(CBaseCombatWeapon *,int)
 286  286 CINSPlayer::Weapon_ShootPosition(void)
 287  287 CBaseCombatCharacter::Weapon_CanSwitchTo(CBaseCombatWeapon *)
 288  288 CBaseCombatCharacter::Weapon_SlotOccupied(CBaseCombatWeapon *)
 289  289 CBaseCombatCharacter::Weapon_GetSlot(int)const
 290  290 CBaseCombatCharacter::AddPlayerItem(CBaseCombatWeapon *)
 291  291 CBasePlayer::RemovePlayerItem(CBaseCombatWeapon *)
 292  292 CBaseCombatCharacter::CanBecomeServerRagdoll(void)
 293  293 CINSPlayer::OnTakeDamage_Alive(CTakeDamageInfo const&)
 294  294 CBaseCombatCharacter::OnTakeDamage_Dying(CTakeDamageInfo const&)
 295  295 CBaseCombatCharacter::OnTakeDamage_Dead(CTakeDamageInfo const&)
 296  296 CBaseCombatCharacter::GetAliveDuration(void)const
 297  297 CBaseCombatCharacter::OnFriendDamaged(CBaseCombatCharacter*,CBaseEntity *)
 298  298 CBaseCombatCharacter::NotifyFriendsOfDamage(CBaseEntity *)
 299  299 CBaseCombatCharacter::HasEverBeenInjured(int)const
 300  300 CBaseCombatCharacter::GetTimeSinceLastInjury(int)const
 301  301 CBaseCombatCharacter::OnPlayerKilledOther(CBaseEntity *,CTakeDamageInfo const&)
 302  302 CBaseCombatCharacter::CalcDeathForceVector(CTakeDamageInfo const&)
 303  303 CBaseCombatCharacter::GetDeathActivity(void)
 304  304 CBaseCombatCharacter::CorpseGib(CTakeDamageInfo const&)
 305  305 CBaseCombatCharacter::CorpseFade(void)
 306  306 CBaseCombatCharacter::HasHumanGibs(void)
 307  307 CBaseCombatCharacter::HasAlienGibs(void)
 308  308 CBaseCombatCharacter::ShouldGib(CTakeDamageInfo const&)
 309  309 CINSPlayer::ShouldDropActiveWeaponWhenKilled(void)
 310  310 CBaseCombatCharacter::OnKilledNPC(CBaseCombatCharacter*)
 311  311 CBaseCombatCharacter::Event_Gibbed(CTakeDamageInfo const&)
 312  312 CINSPlayer::Event_Dying(void)
 313  313 CBaseCombatCharacter::BecomeRagdoll(CTakeDamageInfo const&,Vector const&)
 314  314 CBaseCombatCharacter::FixupBurningServerRagdoll(CBaseEntity *)
 315  315 CBaseCombatCharacter::BecomeRagdollBoogie(CBaseEntity *,Vector const&,float,int)
 316  317 CBaseCombatCharacter::CheckTraceHullAttack(float,Vector const&,Vector const&,float,int,float,bool)
 317  316 CBaseCombatCharacter::CheckTraceHullAttack(Vector const&,Vector const&,Vector const&,Vector const&,float,int,float,bool)
 318  318 CBaseCombatCharacter::PushawayTouch(CBaseEntity *)
 319  319 CBaseCombatCharacter::IRelationType(CBaseEntity *)
 320  320 CBaseCombatCharacter::IRelationPriority(CBaseEntity *)
 321  321 CBasePlayer::IsInAVehicle(void)const
 322  322 CBasePlayer::GetVehicle(void)
 323  323 CBasePlayer::GetVehicleEntity(void)
 324  324 CBaseCombatCharacter::ExitVehicle(void)
 325  325 CBaseCombatCharacter::RemoveAllWeapons(void)
 326  326 CBaseCombatCharacter::RemoveWeaponOnPlayer(CBaseCombatWeapon *)
 327  327 CBaseCombatCharacter::CalcWeaponProficiency(CBaseCombatWeapon *)
 328  328 CBaseCombatCharacter::GetAttackSpread(CBaseCombatWeapon *,CBaseEntity *)
 329  329 CBaseCombatCharacter::GetSpreadBias(CBaseCombatWeapon *,CBaseEntity *)
 330  330 CBasePlayer::DoMuzzleFlash(void)
 331  331 CBaseCombatCharacter::AddEntityRelationship(CBaseEntity *,Disposition_t,int)
 332  332 CBaseCombatCharacter::RemoveEntityRelationship(CBaseEntity *)
 333  333 CBaseCombatCharacter::AddClassRelationship(Class_T,Disposition_t,int)
 334  334 CBaseCombatCharacter::AddFactionRelationship(int,Disposition_t,int)
 335  335 CBaseCombatCharacter::ChangeFaction(int)
 336  336 CBaseCombatCharacter::OnChangeActiveWeapon(CBaseCombatWeapon *,CBaseCombatWeapon *)
 337  337 CINSPlayer::SwitchToNextBestWeapon(CBaseCombatWeapon *)
 338  338 CBasePlayer::GetLastKnownArea(void)const
 339  339 CBaseCombatCharacter::IsAreaTraversable(CNavArea const*)const
 340  340 CBaseCombatCharacter::ClearLastKnownArea(void)
 341  341 CBaseCombatCharacter::UpdateLastKnownArea(void)
 342  342 CINSPlayer::OnNavAreaChanged(CNavArea *,CNavArea *)
 343  343 CBaseCombatCharacter::OnNavAreaRemoved(CNavArea *)
 344  344 CBaseCombatCharacter::OnPursuedBy(INextBot *)
 345  346 CBasePlayer::NetworkStateChanged_m_iAmmo(void)
 346  345 CBasePlayer::NetworkStateChanged_m_iAmmo(void *)
 347  347 CINSPlayer::CreateViewModel(int)
 348  348 CBasePlayer::SetupVisibility(CBaseEntity *,unsigned char *,int)
 349  349 CINSPlayer::WantsLagCompensationOnEntity(CBaseEntity const*,CUserCmd const*,CBitVec<2048> const*)const
 350  350 CINSPlayer::SharedSpawn(void)
 351  351 CINSPlayer::ForceRespawn(void)
 352  352 CBasePlayer::PostSpawnPointSelection(void)
 353  353 CINSPlayer::InitialSpawn(void)
 354  354 CBasePlayer::InitHUD(void)
 355  355 CBasePlayer::ShowViewPortPanel(char const*,bool,KeyValues *)
 356  356 CBasePlayer::GetPlayerModelName(void)
 357  357 CINSPlayer::PlayerDeathThink(void)
 358  358 CBasePlayer::PlayerForceTeamThink(void)
 359  359 CBasePlayer::Jump(void)
 360  360 CBasePlayer::Duck(void)
 361  361 CINSPlayer::PlayerSolidMask(bool)const
 362  362 CINSPlayer::PreThink(void)
 363  363 CINSPlayer::PostThink(void)
 364  364 CINSPlayer::DamageEffect(float,int)
 365  365 CBasePlayer::OnSwitchWeapons(CBaseCombatWeapon *)
 366  366 CINSPlayer::OnDamagedByExplosion(CTakeDamageInfo const&)
 367  367 CBasePlayer::CanKickFromTeam(int)
 368  368 CINSPlayer::SnapEyeAngles(QAngle const&)
 369  369 CBasePlayer::ShouldFadeOnDeath(void)
 370  370 CBasePlayer::IsFakeClient(void)const
 371  371 CBasePlayer::GetCharacterDisplayName(void)
 372  372 CINSPlayer::GetPlayerMins(void)const
 373  373 CINSPlayer::GetPlayerMaxs(void)const
 374  374 CINSPlayer::UpdateCollisionBounds(void)
 375  375 CBasePlayer::NoClipStateChanged(void)
 376  376 CINSPlayer::InFirstPerson(void)
 377  377 CBasePlayer::CalcRoll(QAngle const&,Vector const&,float,float)
 378  378 CINSPlayer::CalcViewBob(Vector &)
 379  379 CBasePlayer::PackDeadPlayerItems(void)
 380  380 CINSPlayer::RemoveAllItems(bool)
 381  381 CBasePlayer::ActivePlayerCombatCharacter(void)
 382  382 CBasePlayer::Weapon_SetLast(CBaseCombatWeapon *)
 383  383 CBasePlayer::Weapon_ShouldSetLast(CBaseCombatWeapon *,CBaseCombatWeapon *)
 384  384 CBasePlayer::Weapon_ShouldSelectItem(CBaseCombatWeapon *)
 385  385 CBasePlayer::HasUnlockableWeapons(int)
 386  386 CINSPlayer::UpdateClientData(void)
 387  387 CBasePlayer::UpdateBattery(void)
 388  388 CBasePlayer::RumbleEffect(unsigned char,unsigned char,unsigned char)
 389  389 CBasePlayer::ExitLadder(void)
 390  390 CBasePlayer::GetLadderSurface(Vector const&)
 391  391 CBasePlayer::SetFlashlightEnabled(bool)
 392  392 CINSPlayer::FlashlightIsOn(void)
 393  393 CINSPlayer::FlashlightTurnOn(bool)
 394  394 CINSPlayer::FlashlightTurnOff(bool)
 395  395 CBasePlayer::IsIlluminatedByFlashlight(CBaseEntity *,float *)
 396  396 CBasePlayer::UpdatePlayerSound(void)
 397  397 CINSPlayer::UpdateStepSound(surfacedata_t *,Vector const&,Vector const&)
 398  398 CINSPlayer::PlayStepSound(Vector &,surfacedata_t *,float,bool)
 399  399 CBasePlayer::GetStepSoundVelocities(float *,float *)
 400  400 CBasePlayer::SetStepSoundTime(stepsoundtimes_t,bool)
 401  401 CINSPlayer::DeathSound(CTakeDamageInfo const&)
 402  402 CBasePlayer::SetFogController(CFogController *)
 403  403 CBasePlayer::GetSoundscapeListener(void)
 404  404 CINSPlayer::SetAnimation(PLAYER_ANIM)
 405  405 CBasePlayer::OnMainActivityComplete(Activity,Activity)
 406  406 CBasePlayer::OnMainActivityInterrupted(Activity,Activity)
 407  407 CINSPlayer::ImpulseCommands(void)
 408  408 CINSPlayer::CheatImpulseCommands(int)
 409  409 CINSPlayer::ClientCommand(CCommand const&)
 410  410 CINSPlayer::StartObserverMode(int)
 411  411 CBasePlayer::StopObserverMode(void)
 412  412 CINSPlayer::ModeWantsSpectatorGUI(int)
 413  413 CINSPlayer::SetObserverMode(int)
 414  414 CBasePlayer::GetObserverMode(void)
 415  415 CBasePlayer::SetObserverTarget(CBaseEntity *)
 416  416 CINSPlayer::ObserverUse(bool)
 417  417 CBasePlayer::GetObserverTarget(void)
 418  418 CBasePlayer::FindNextObserverTarget(bool)
 419  419 CBasePlayer::GetNextObserverSearchStartPoint(bool)
 420  420 CBasePlayer::PassesObserverFilter(CBaseEntity const*)
 421  421 CINSPlayer::IsValidObserverTarget(CBaseEntity *)
 422  422 CINSPlayer::CheckObserverSettings(void)
 423  423 CBasePlayer::JumptoPosition(Vector const&,QAngle const&)
 424  424 CBasePlayer::ForceObserverMode(int)
 425  425 CINSPlayer::ResetObserverMode(void)
 426  426 CBasePlayer::ValidateCurrentObserverTarget(void)
 427  427 CINSPlayer::AttemptToExitFreezeCam(void)
 428  428 CBasePlayer::StartReplayMode(float,float,int)
 429  429 CBasePlayer::StopReplayMode(void)
 430  430 CBasePlayer::GetDelayTicks(void)
 431  431 CBasePlayer::GetReplayEntity(void)
 432  432 CBasePlayer::CreateCorpse(void)
 433  433 CBasePlayer::EntSelectSpawnPoint(void)
 434  434 CBasePlayer::GetInVehicle(IServerVehicle *,int)
 435  435 CBasePlayer::LeaveVehicle(Vector const&,QAngle const&)
 436  436 CBasePlayer::OnVehicleStart(void)
 437  437 CBasePlayer::OnVehicleEnd(Vector &)
 438  438 CINSPlayer::BumpWeapon(CBaseCombatWeapon *)
 439  439 CBasePlayer::SelectLastItem(void)
 440  440 CBasePlayer::SelectItem(char const*,int)
 441  441 CINSPlayer::ItemPostFrame(void)
 442  442 CINSPlayer::GiveNamedItem(char const*,int,bool)
 443  443 CBasePlayer::CheckTrainUpdate(void)
 444  444 CBasePlayer::SetPlayerUnderwater(bool)
 445  445 CBasePlayer::CanBreatheUnderwater(void)const
 446  446 CBasePlayer::CanRecoverCurrentDrowningDamage(void)const
 447  447 CBasePlayer::PlayerUse(void)
 448  448 CBasePlayer::PlayUseDenySound(void)
 449  449 CINSPlayer::FindUseEntity(float,float,float,bool *)
 450  450 CBasePlayer::IsUseableEntity(CBaseEntity *,unsigned int)
 451  451 CBasePlayer::PickupObject(CBaseEntity *,bool)
 452  452 CBasePlayer::ForceDropOfCarriedPhysObjects(CBaseEntity *)
 453  453 CBasePlayer::GetHeldObjectMass(IPhysicsObject *)
 454  457 CBasePlayer::GetAutoaimVector(float)
 455  456 CBasePlayer::GetAutoaimVector(float,float)
 456  455 CBasePlayer::GetAutoaimVector(float,float,float,AimResults *)
 457  454 CBasePlayer::GetAutoaimVector(autoaim_params_t &)
 458  458 CBasePlayer::ShouldAutoaim(void)
 459  459 CBasePlayer::ForceClientDllUpdate(void)
 460  460 CBasePlayer::ProcessUsercmds(CUserCmd *,int,int,int,bool)
 461  461 CINSPlayer::PlayerRunCommand(CUserCmd *,IMoveHelper *)
 462  462 CINSPlayer::ChangeTeam(int,bool,bool)
 463  463 CINSPlayer::CanHearAndReadChatFrom(CBasePlayer *)
 464  464 CINSPlayer::CanSpeak(void)
 465  465 CINSPlayer::ModifyOrAppendPlayerCriteria(ResponseRules::CriteriaSet &)
 466  466 CBasePlayer::GetViewPunchAngle(void)
 467  467 CBasePlayer::GetAimPunchAngle(void)
 468  468 CBasePlayer::CheckChatText(char *,int)
 469  469 CBasePlayer::CreateRagdollEntity(void)
 470  470 CBasePlayer::ShouldAnnounceAchievement(void)
 471  471 CBasePlayer::EnsureSplitScreenTeam(void)
 472  472 CINSPlayer::ForceChangeTeam(int)
 473  473 CBasePlayer::IsFollowingPhysics(void)
 474  474 CBasePlayer::InitVCollision(Vector const&,Vector const&)
 475  475 CBasePlayer::UpdatePhysicsShadowToCurrentPosition(void)
 476  476 CBasePlayer::Hints(void)
 477  477 CBasePlayer::IsPlayerSetupToPlay(void)
 478  478 CINSPlayer::IsReadyToSpawn(void)
 479  479 CINSPlayer::ShouldGainInstantSpawn(void)
 480  480 CINSPlayer::ResetPerRoundStats(void)
 481  481 CINSPlayer::ResetScores(void)
 482  482 CBasePlayer::IncrementFragCount(int)
 483  483 CINSPlayer::IncrementAssistsCount(int)
 484  484 CBasePlayer::IncrementDeathCount(int)
 485  485 CBasePlayer::EquipSuit(bool)
 486  486 CBasePlayer::RemoveSuit(void)
 487  487 CBasePlayer::GetUseEntity(void)
 488  488 CBasePlayer::GetPotentialUseEntity(void)
 489  489 CBasePlayer::GetPlayerMaxSpeed(void)
 490  491 CINSPlayer::CommitSuicide(bool,bool)
 491  490 CINSPlayer::CommitSuicide(Vector const&,bool,bool)
 492  492 CBasePlayer::IsBot(void)const
 493  493 CBasePlayer::IsBotOfType(int)const
 494  494 CBasePlayer::GetBotType(void)const
 495  495 CBaseMultiplayerPlayer::GetExpresser(void)
 496  496 CINSPlayer::CalcPlayerView(Vector &,QAngle &,float &)
 497  497 CINSPlayer::SpawnArmorValue(void)const
 498  498 CBasePlayer::UpdateTonemapController(void)
 499  500 CBasePlayer::NetworkStateChanged_m_ArmorValue(void)
 500  499 CBasePlayer::NetworkStateChanged_m_ArmorValue(void *)
 501  501 CBasePlayer::FindEntityClassForward(char *)
 502  502 CBasePlayer::FindEntityForward(bool)
 503  503 CBasePlayer::FindPickerEntityClass(char *)
 504  504 CBasePlayer::FindPickerEntity(void)
 505  505 CBasePlayer::OnSpeak(CBasePlayer*,char const*,float)
 506  506 CBasePlayer::OnVoiceTransmit(void)
 507  507 CAI_ExpresserHost<CBasePlayer>::NoteSpeaking(float,float)
 508  509 CAI_ExpresserHost<CBasePlayer>::Speak(CAI_Concept,char const*,char *,unsigned int,IRecipientFilter *)
 509  508 CAI_ExpresserHost<CBasePlayer>::Speak(CAI_Concept,ResponseRules::CriteriaSet *,char *,unsigned int,IRecipientFilter *)
 510  510 CAI_ExpresserHost<CBasePlayer>::PostSpeakDispatchResponse(CAI_Concept,ResponseRules::CRR_Response *)
 511  511 CINSPlayer::SpeakIfAllowed(CAI_Concept,SpeechPriorityType,char const*,char *,unsigned int,IRecipientFilter *)
 512  512 CINSPlayer::SpeakConceptIfAllowed(int,char const*,char *,unsigned int,IRecipientFilter *)
 513  513 CBaseMultiplayerPlayer::CanSpeakVoiceCommand(void)
 514  514 CBaseMultiplayerPlayer::ShouldShowVoiceSubtitleToEnemy(void)
 515  515 CBaseMultiplayerPlayer::NoteSpokeVoiceCommand(char const*)
 516  516 CBaseMultiplayerPlayer::OnAchievementEarned(int)
 517  517 CBaseMultiplayerPlayer::GetMultiplayerExpresser(void)
 518  518 CINSPlayer::CalculateTeamBalanceScore(void)
 519  519 CBaseMultiplayerPlayer::AwardAchievement(int,int)
 520  520 CBaseMultiplayerPlayer::CreateExpresser(void)
 521  521 CINSPlayer::CanOpenInventoryMenu(void)const
 522  522 CINSPlayer::CanConfirmKit(void)const
 523  523 CINSPlayer::OverrideDeathSound(CTakeDamageInfo const&)
 524  524 CINSPlayer::CalcObserverView(Vector &,QAngle &,float &)
 525  525 CINSPlayer::CanTransitionToObserver(bool)const
 526  526 CINSPlayer::OnGameReset(void)
 527  527 CINSPlayer::OnNewRound(void)
 528  528 CINSPlayer::OnNewGame(void)
 529  529 CINSPlayer::IsPlayerSetupToPlay(void)const
 530  530 CINSPlayer::OnClientSettingsChanged(void)
 531  531 CINSPlayer::OnTeamChanged(int,int,bool)
 532  532 CINSPlayer::OnSquadSlotChanged(int,int)
 533  533 CINSPlayer::IsSquadLeader(void)const
 534  534 CINSPlayer::GetScorer(void)
 535  535 CINSPlayer::Jumped(void)
 536  536 CINSPlayer::Landed(void)
 537  537 CINSPlayer::InAir(void)
 538  538 CINSPlayer::UpdateCaptureSpeedModifier(void)
 539  539 CINSPlayer::Pain(bool,CTakeDamageInfo const&)
 540  540 CINSPlayer::OnPlayerModelAssigned(playerClassTemplate_t const*)
 541  541 CINSPlayer::GiveDefaultItems(void)
 542  542 CINSPlayer::GetBotReceivedDamageMultiplier(CTakeDamageInfo const&)
 543  543 CINSPlayer::SetupHelmet(playerClassTemplate_t const*)
 544  544 CINSPlayer::PopHelmet(Vector,Vector)
 545  545 CINSPlayer::UpdateNearbyTeammateCounts(void)
 546  546 CINSPlayer::PreUpdateNearbyTeammateCounts(void)
 547  547 CINSPlayer::OnNearPlayer(CINSPlayer*,float)
 548  548 CINSPlayer::PlayFootstepSound(Vector const&,bool,bool,bool,bool)
 549  549 CINSPlayer::HandleCustomRadialCommand(radialData_t const&,Vector const&,char const*)
 550  550 CINSPlayer::HandleIncomingRadialCommand(radialData_t &)
 551  551 CINSPlayer::HandleIncomingRadialCommandPostChecks(radialData_t)
 552  552 CINSPlayer::ShouldSuppressVO(int)const
 553  553 CINSPlayer::GetTimeSinceWeaponFired(void)const
 554  554 CINSPlayer::IsFiringWeapon(void)const
 555  555 CINSPlayer::IsInCombat(void)const

VTable for CAI_ExpresserSink: (1, 5752)
 Lin  Win Function
   0    0 CAI_ExpresserSink::OnSpokeConcept(CAI_Concept,ResponseRules::CRR_Response *)
   1    1 CAI_ExpresserSink::OnStartSpeaking(void)
   2    2 CAI_ExpresserSink::UseSemaphore(void)
